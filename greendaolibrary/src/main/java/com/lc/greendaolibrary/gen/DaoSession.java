package com.lc.greendaolibrary.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.lc.greendaolibrary.dao.AdvanceInfo;
import com.lc.greendaolibrary.dao.AdvancePayment;
import com.lc.greendaolibrary.dao.AdviceShipment;
import com.lc.greendaolibrary.dao.CreateOrderDefault;
import com.lc.greendaolibrary.dao.Delivery;
import com.lc.greendaolibrary.dao.DeliveryMode;
import com.lc.greendaolibrary.dao.GoodsSource;
import com.lc.greendaolibrary.dao.GoodsType;
import com.lc.greendaolibrary.dao.Notice;
import com.lc.greendaolibrary.dao.PackageType;
import com.lc.greendaolibrary.dao.Payment;
import com.lc.greendaolibrary.dao.ReceiveCountry;
import com.lc.greendaolibrary.dao.SenderCountry;
import com.lc.greendaolibrary.dao.Service;
import com.lc.greendaolibrary.dao.TypeOrShipping;
import com.lc.greendaolibrary.dao.UserInfo;
import com.lc.greendaolibrary.dao.ValuationMethod;
import com.lc.greendaolibrary.dao.scan.ScanMain;
import com.lc.greendaolibrary.dao.scan.ScanSub;

import com.lc.greendaolibrary.gen.AdvanceInfoDao;
import com.lc.greendaolibrary.gen.AdvancePaymentDao;
import com.lc.greendaolibrary.gen.AdviceShipmentDao;
import com.lc.greendaolibrary.gen.CreateOrderDefaultDao;
import com.lc.greendaolibrary.gen.DeliveryDao;
import com.lc.greendaolibrary.gen.DeliveryModeDao;
import com.lc.greendaolibrary.gen.GoodsSourceDao;
import com.lc.greendaolibrary.gen.GoodsTypeDao;
import com.lc.greendaolibrary.gen.NoticeDao;
import com.lc.greendaolibrary.gen.PackageTypeDao;
import com.lc.greendaolibrary.gen.PaymentDao;
import com.lc.greendaolibrary.gen.ReceiveCountryDao;
import com.lc.greendaolibrary.gen.SenderCountryDao;
import com.lc.greendaolibrary.gen.ServiceDao;
import com.lc.greendaolibrary.gen.TypeOrShippingDao;
import com.lc.greendaolibrary.gen.UserInfoDao;
import com.lc.greendaolibrary.gen.ValuationMethodDao;
import com.lc.greendaolibrary.gen.ScanMainDao;
import com.lc.greendaolibrary.gen.ScanSubDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig advanceInfoDaoConfig;
    private final DaoConfig advancePaymentDaoConfig;
    private final DaoConfig adviceShipmentDaoConfig;
    private final DaoConfig createOrderDefaultDaoConfig;
    private final DaoConfig deliveryDaoConfig;
    private final DaoConfig deliveryModeDaoConfig;
    private final DaoConfig goodsSourceDaoConfig;
    private final DaoConfig goodsTypeDaoConfig;
    private final DaoConfig noticeDaoConfig;
    private final DaoConfig packageTypeDaoConfig;
    private final DaoConfig paymentDaoConfig;
    private final DaoConfig receiveCountryDaoConfig;
    private final DaoConfig senderCountryDaoConfig;
    private final DaoConfig serviceDaoConfig;
    private final DaoConfig typeOrShippingDaoConfig;
    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig valuationMethodDaoConfig;
    private final DaoConfig scanMainDaoConfig;
    private final DaoConfig scanSubDaoConfig;

    private final AdvanceInfoDao advanceInfoDao;
    private final AdvancePaymentDao advancePaymentDao;
    private final AdviceShipmentDao adviceShipmentDao;
    private final CreateOrderDefaultDao createOrderDefaultDao;
    private final DeliveryDao deliveryDao;
    private final DeliveryModeDao deliveryModeDao;
    private final GoodsSourceDao goodsSourceDao;
    private final GoodsTypeDao goodsTypeDao;
    private final NoticeDao noticeDao;
    private final PackageTypeDao packageTypeDao;
    private final PaymentDao paymentDao;
    private final ReceiveCountryDao receiveCountryDao;
    private final SenderCountryDao senderCountryDao;
    private final ServiceDao serviceDao;
    private final TypeOrShippingDao typeOrShippingDao;
    private final UserInfoDao userInfoDao;
    private final ValuationMethodDao valuationMethodDao;
    private final ScanMainDao scanMainDao;
    private final ScanSubDao scanSubDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        advanceInfoDaoConfig = daoConfigMap.get(AdvanceInfoDao.class).clone();
        advanceInfoDaoConfig.initIdentityScope(type);

        advancePaymentDaoConfig = daoConfigMap.get(AdvancePaymentDao.class).clone();
        advancePaymentDaoConfig.initIdentityScope(type);

        adviceShipmentDaoConfig = daoConfigMap.get(AdviceShipmentDao.class).clone();
        adviceShipmentDaoConfig.initIdentityScope(type);

        createOrderDefaultDaoConfig = daoConfigMap.get(CreateOrderDefaultDao.class).clone();
        createOrderDefaultDaoConfig.initIdentityScope(type);

        deliveryDaoConfig = daoConfigMap.get(DeliveryDao.class).clone();
        deliveryDaoConfig.initIdentityScope(type);

        deliveryModeDaoConfig = daoConfigMap.get(DeliveryModeDao.class).clone();
        deliveryModeDaoConfig.initIdentityScope(type);

        goodsSourceDaoConfig = daoConfigMap.get(GoodsSourceDao.class).clone();
        goodsSourceDaoConfig.initIdentityScope(type);

        goodsTypeDaoConfig = daoConfigMap.get(GoodsTypeDao.class).clone();
        goodsTypeDaoConfig.initIdentityScope(type);

        noticeDaoConfig = daoConfigMap.get(NoticeDao.class).clone();
        noticeDaoConfig.initIdentityScope(type);

        packageTypeDaoConfig = daoConfigMap.get(PackageTypeDao.class).clone();
        packageTypeDaoConfig.initIdentityScope(type);

        paymentDaoConfig = daoConfigMap.get(PaymentDao.class).clone();
        paymentDaoConfig.initIdentityScope(type);

        receiveCountryDaoConfig = daoConfigMap.get(ReceiveCountryDao.class).clone();
        receiveCountryDaoConfig.initIdentityScope(type);

        senderCountryDaoConfig = daoConfigMap.get(SenderCountryDao.class).clone();
        senderCountryDaoConfig.initIdentityScope(type);

        serviceDaoConfig = daoConfigMap.get(ServiceDao.class).clone();
        serviceDaoConfig.initIdentityScope(type);

        typeOrShippingDaoConfig = daoConfigMap.get(TypeOrShippingDao.class).clone();
        typeOrShippingDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        valuationMethodDaoConfig = daoConfigMap.get(ValuationMethodDao.class).clone();
        valuationMethodDaoConfig.initIdentityScope(type);

        scanMainDaoConfig = daoConfigMap.get(ScanMainDao.class).clone();
        scanMainDaoConfig.initIdentityScope(type);

        scanSubDaoConfig = daoConfigMap.get(ScanSubDao.class).clone();
        scanSubDaoConfig.initIdentityScope(type);

        advanceInfoDao = new AdvanceInfoDao(advanceInfoDaoConfig, this);
        advancePaymentDao = new AdvancePaymentDao(advancePaymentDaoConfig, this);
        adviceShipmentDao = new AdviceShipmentDao(adviceShipmentDaoConfig, this);
        createOrderDefaultDao = new CreateOrderDefaultDao(createOrderDefaultDaoConfig, this);
        deliveryDao = new DeliveryDao(deliveryDaoConfig, this);
        deliveryModeDao = new DeliveryModeDao(deliveryModeDaoConfig, this);
        goodsSourceDao = new GoodsSourceDao(goodsSourceDaoConfig, this);
        goodsTypeDao = new GoodsTypeDao(goodsTypeDaoConfig, this);
        noticeDao = new NoticeDao(noticeDaoConfig, this);
        packageTypeDao = new PackageTypeDao(packageTypeDaoConfig, this);
        paymentDao = new PaymentDao(paymentDaoConfig, this);
        receiveCountryDao = new ReceiveCountryDao(receiveCountryDaoConfig, this);
        senderCountryDao = new SenderCountryDao(senderCountryDaoConfig, this);
        serviceDao = new ServiceDao(serviceDaoConfig, this);
        typeOrShippingDao = new TypeOrShippingDao(typeOrShippingDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        valuationMethodDao = new ValuationMethodDao(valuationMethodDaoConfig, this);
        scanMainDao = new ScanMainDao(scanMainDaoConfig, this);
        scanSubDao = new ScanSubDao(scanSubDaoConfig, this);

        registerDao(AdvanceInfo.class, advanceInfoDao);
        registerDao(AdvancePayment.class, advancePaymentDao);
        registerDao(AdviceShipment.class, adviceShipmentDao);
        registerDao(CreateOrderDefault.class, createOrderDefaultDao);
        registerDao(Delivery.class, deliveryDao);
        registerDao(DeliveryMode.class, deliveryModeDao);
        registerDao(GoodsSource.class, goodsSourceDao);
        registerDao(GoodsType.class, goodsTypeDao);
        registerDao(Notice.class, noticeDao);
        registerDao(PackageType.class, packageTypeDao);
        registerDao(Payment.class, paymentDao);
        registerDao(ReceiveCountry.class, receiveCountryDao);
        registerDao(SenderCountry.class, senderCountryDao);
        registerDao(Service.class, serviceDao);
        registerDao(TypeOrShipping.class, typeOrShippingDao);
        registerDao(UserInfo.class, userInfoDao);
        registerDao(ValuationMethod.class, valuationMethodDao);
        registerDao(ScanMain.class, scanMainDao);
        registerDao(ScanSub.class, scanSubDao);
    }
    
    public void clear() {
        advanceInfoDaoConfig.clearIdentityScope();
        advancePaymentDaoConfig.clearIdentityScope();
        adviceShipmentDaoConfig.clearIdentityScope();
        createOrderDefaultDaoConfig.clearIdentityScope();
        deliveryDaoConfig.clearIdentityScope();
        deliveryModeDaoConfig.clearIdentityScope();
        goodsSourceDaoConfig.clearIdentityScope();
        goodsTypeDaoConfig.clearIdentityScope();
        noticeDaoConfig.clearIdentityScope();
        packageTypeDaoConfig.clearIdentityScope();
        paymentDaoConfig.clearIdentityScope();
        receiveCountryDaoConfig.clearIdentityScope();
        senderCountryDaoConfig.clearIdentityScope();
        serviceDaoConfig.clearIdentityScope();
        typeOrShippingDaoConfig.clearIdentityScope();
        userInfoDaoConfig.clearIdentityScope();
        valuationMethodDaoConfig.clearIdentityScope();
        scanMainDaoConfig.clearIdentityScope();
        scanSubDaoConfig.clearIdentityScope();
    }

    public AdvanceInfoDao getAdvanceInfoDao() {
        return advanceInfoDao;
    }

    public AdvancePaymentDao getAdvancePaymentDao() {
        return advancePaymentDao;
    }

    public AdviceShipmentDao getAdviceShipmentDao() {
        return adviceShipmentDao;
    }

    public CreateOrderDefaultDao getCreateOrderDefaultDao() {
        return createOrderDefaultDao;
    }

    public DeliveryDao getDeliveryDao() {
        return deliveryDao;
    }

    public DeliveryModeDao getDeliveryModeDao() {
        return deliveryModeDao;
    }

    public GoodsSourceDao getGoodsSourceDao() {
        return goodsSourceDao;
    }

    public GoodsTypeDao getGoodsTypeDao() {
        return goodsTypeDao;
    }

    public NoticeDao getNoticeDao() {
        return noticeDao;
    }

    public PackageTypeDao getPackageTypeDao() {
        return packageTypeDao;
    }

    public PaymentDao getPaymentDao() {
        return paymentDao;
    }

    public ReceiveCountryDao getReceiveCountryDao() {
        return receiveCountryDao;
    }

    public SenderCountryDao getSenderCountryDao() {
        return senderCountryDao;
    }

    public ServiceDao getServiceDao() {
        return serviceDao;
    }

    public TypeOrShippingDao getTypeOrShippingDao() {
        return typeOrShippingDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public ValuationMethodDao getValuationMethodDao() {
        return valuationMethodDao;
    }

    public ScanMainDao getScanMainDao() {
        return scanMainDao;
    }

    public ScanSubDao getScanSubDao() {
        return scanSubDao;
    }

}
